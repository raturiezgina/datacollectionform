runApp('R/Release/calibration')
shiny::runApp('R/Release/calibration')
data_accuracy <- sqlInterpolate(con,"SELECT u_95, accuracy, deviation FROM calibration_properties
WHERE serial_number = ?sn;",
sn = '5'#toupper(input$tool_id_number)
)
first_column <- list("Outside,Inside,Depth,Step")
fc <- (str_split_fixed(first_column, ",",4))
unc <- gsub("\\{|\\}", "", (str_split_fixed(data_accuracy$u_95, ",",4)))
data_accuracy <- sqlInterpolate(con,"SELECT u_95, accuracy, deviation FROM calibration_properties
WHERE serial_number = ?sn;",
sn = '5'#toupper(input$tool_id_number)
)
library(reactable)
library(DBI)
library(shinyalert)
library(rhandsontable)
library(dplyr)
library(lubridate)
library(shinyWidgets)
library(shinydashboard)
library(shinyjs)
library(knitr)
library(kableExtra)
library(RPostgres)
library (RODBC)
library (odbc)
library(pool)
mypw<- 'd@mpJam58'
myPort <- '5432'
myDB <- 'trial_database'
myUser <- 'shiny'
con <- dbConnect(RPostgres::Postgres()
, host ='10.250.4.91'
, port = myPort
, dbname = myDB
, user = myUser
, password = mypw
, timezone = "Asia/Jakarta")
data_accuracy <- sqlInterpolate(con,"SELECT u_95, accuracy, deviation FROM calibration_properties
WHERE serial_number = ?sn;",
sn = '5'#toupper(input$tool_id_number)
)
data_accuracy <- dbGetQuery(con, data_accuracy)
first_column <- list("Outside,Inside,Depth,Step")
fc <- (str_split_fixed(first_column, ",",4))
unc <- gsub("\\{|\\}", "", (str_split_fixed(data_accuracy$u_95, ",",4)))
acc <- gsub("\\{|\\}", "", (str_split_fixed(data_accuracy$accuracy, ",",4)))
devi <- gsub("\\{|\\}", "", (str_split_fixed(data_accuracy$deviation, ",",4)))
combine <- cbind(fc,unc,acc,devi)
mat_result <- matrix(combine, nrow = 4, ncol = 4)
data_accuracy
combine
mat_result
rename(as.data.frame(mat_result),
"Variant Measurement" = V1,
"U95" = V2, "Accuracy" = V3, "Deviation" = V4)
runApp('R/Release/calibration')
runApp('R/Release/calibration')
shiny::runApp('R/Release/trial_barcode')
runApp('R/Release/calibration')
runApp('R/Release/calibration')
runApp('R/Release/calibration')
runApp('R/Release/calibration')
